create table "public"."url_visits" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "url_id" uuid,
    "ip_address" character varying
);


alter table "public"."url_visits" enable row level security;

create table "public"."urls" (
    "id" uuid not null,
    "created_at" timestamp with time zone default now(),
    "user_id" uuid,
    "original_url" text,
    "short_url_code" character varying
);


alter table "public"."urls" enable row level security;

CREATE UNIQUE INDEX url_visits_pkey ON public.url_visits USING btree (id);

CREATE UNIQUE INDEX urls_pkey ON public.urls USING btree (id);

alter table "public"."url_visits" add constraint "url_visits_pkey" PRIMARY KEY using index "url_visits_pkey";

alter table "public"."urls" add constraint "urls_pkey" PRIMARY KEY using index "urls_pkey";

alter table "public"."url_visits" add constraint "url_visits_url_id_fkey" FOREIGN KEY (url_id) REFERENCES urls(id) ON DELETE CASCADE not valid;

alter table "public"."url_visits" validate constraint "url_visits_url_id_fkey";

alter table "public"."urls" add constraint "urls_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."urls" validate constraint "urls_user_id_fkey";


